// <auto-generated />
using System;
using EPE.Infrastructure.SqlServer.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EPE.Migrations
{
    [DbContext(typeof(SqlServerCommandDbContext))]
    [Migration("20231117093435_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EPE.Domain.EmployeeManagement.Aggregates.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Birthplace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EmploymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("IdNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("JobId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaritalStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("MilitaryServiceStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumberOfDependents")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Employees", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("31bbac2a-2a14-445f-9e37-08b81c1f192f"),
                            Birthdate = new DateTime(2000, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Birthplace = "تهران",
                            Code = "1",
                            Description = "توسعه دهنده ی پروژه ارزیابی عملکرد کارکنان",
                            EmploymentDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FatherName = "مسعود",
                            FirstName = "متین",
                            GenderId = 2,
                            IdNo = "0022",
                            JobId = 1,
                            LastName = "گشتاسبی",
                            MaritalStatusId = 2,
                            MilitaryServiceStatusId = 1,
                            Nationality = "ایرانی",
                            NumberOfDependents = 1,
                            ReleaseDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("EPE.Domain.EmployeeManagement.Aggregates.EmployeeContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeContacts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmployeeId = new Guid("31bbac2a-2a14-445f-9e37-08b81c1f192f"),
                            Title = "شماره شخصی",
                            Type = 1,
                            Value = "0930"
                        });
                });

            modelBuilder.Entity("EPE.Domain.EmployeeManagement.Aggregates.EmployeeEducation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double?>("Average")
                        .HasColumnType("float");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("LevelId")
                        .HasColumnType("int");

                    b.Property<int>("MajorId")
                        .HasColumnType("int");

                    b.Property<string>("Minor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeEducations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Average = 16.5,
                            EmployeeId = new Guid("31bbac2a-2a14-445f-9e37-08b81c1f192f"),
                            LevelId = 5,
                            MajorId = 1,
                            Minor = ""
                        });
                });

            modelBuilder.Entity("EPE.Domain.EmployeeManagement.Aggregates.EmployeePhysicalInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PhysicalInfoId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeePhysicalInfos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmployeeId = new Guid("31bbac2a-2a14-445f-9e37-08b81c1f192f"),
                            PhysicalInfoId = 1,
                            Value = "186 cm"
                        });
                });

            modelBuilder.Entity("EPE.Domain.EmployeeManagement.Aggregates.EmployeeResume", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeResume");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "شاغل در شرکت های : \n سازمان بنادر و کشتیرانی (آسپیان) \nشرکت بابکو \nبیمه ی مرکزی ایران (راهبرد نگار آمیتیس)",
                            EmployeeId = new Guid("31bbac2a-2a14-445f-9e37-08b81c1f192f"),
                            FromDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "توسعه دهنده ی دات نت",
                            ToDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("EPE.Domain.EmployeeManagement.ValueObjects.Education.EducationLevelEM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable((string)null, t => t.ExcludeFromMigrations());

                    b.ToSqlQuery("select * from EducationLevels");
                });

            modelBuilder.Entity("EPE.Domain.EmployeeManagement.ValueObjects.Education.EducationMajorEM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable((string)null, t => t.ExcludeFromMigrations());

                    b.ToSqlQuery("select * from EducationMajors");
                });

            modelBuilder.Entity("EPE.Domain.EmployeeManagement.ValueObjects.Gender.GenderEM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable((string)null, t => t.ExcludeFromMigrations());

                    b.ToSqlQuery("select * from Genders");
                });

            modelBuilder.Entity("EPE.Domain.EmployeeManagement.ValueObjects.MaritalStatus.MaritalStatusEM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable((string)null, t => t.ExcludeFromMigrations());

                    b.ToSqlQuery("select * from MaritalStatuses");
                });

            modelBuilder.Entity("EPE.Domain.EmployeeManagement.ValueObjects.MilitaryServiceStatus.MilitaryServiceStatusEM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable((string)null, t => t.ExcludeFromMigrations());

                    b.ToSqlQuery("select * from MilitaryServiceStatuses");
                });

            modelBuilder.Entity("EPE.Domain.EmployeeManagement.ValueObjects.PhysicalInfo.PhysicalInfoEM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable((string)null, t => t.ExcludeFromMigrations());

                    b.ToSqlQuery("select * from PhysicalInfos");
                });

            modelBuilder.Entity("EPE.Domain.MasterData.Aggregates.EducationLevelMD", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EducationLevels", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Order = 1,
                            Title = "بیسواد"
                        },
                        new
                        {
                            Id = 2,
                            Order = 2,
                            Title = "سیکل"
                        },
                        new
                        {
                            Id = 3,
                            Order = 3,
                            Title = "دیپلم"
                        },
                        new
                        {
                            Id = 4,
                            Order = 4,
                            Title = "کاردانی"
                        },
                        new
                        {
                            Id = 5,
                            Order = 5,
                            Title = "کارشناسی"
                        },
                        new
                        {
                            Id = 6,
                            Order = 6,
                            Title = "کارشناسی ارشد"
                        },
                        new
                        {
                            Id = 7,
                            Order = 7,
                            Title = "دکترا"
                        });
                });

            modelBuilder.Entity("EPE.Domain.MasterData.Aggregates.EducationMajorMD", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EducationMajors", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "مهندسی کامپیوتر"
                        },
                        new
                        {
                            Id = 2,
                            Title = "مهندسی صنایع"
                        },
                        new
                        {
                            Id = 3,
                            Title = "علوم کامپیوتر"
                        });
                });

            modelBuilder.Entity("EPE.Domain.MasterData.Aggregates.EvaluationItemMD", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MeritItemId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EvaluationItems", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "درک جملات و پاراگراف های نوشته شده در اسناد مربوط به کار.",
                            MeritItemId = 1,
                            Title = "درک مطلب"
                        },
                        new
                        {
                            Id = 2,
                            Description = "توجه کامل به آنچه دیگران می گویند، وقت گذاشتن برای درک نکات گفته شده، پرسیدن سؤالات مناسب و عدم قطع صحبت در زمان های نامناسب.",
                            MeritItemId = 1,
                            Title = "گوش دادن فعال"
                        },
                        new
                        {
                            Id = 3,
                            Description = "برقراری ارتباط مؤثر به صورت نوشتاری و متناسب با نیازهای مخاطب.",
                            MeritItemId = 1,
                            Title = "نوشتن"
                        },
                        new
                        {
                            Id = 4,
                            Description = "استفاده از منطق و استدلال برای شناسایی نقاط قوت و ضعف راه حل ها، نتیجه گیری ها یا رویکردهای جایگزین برای مشکلات.",
                            MeritItemId = 1,
                            Title = "تفکر انتقادی"
                        },
                        new
                        {
                            Id = 5,
                            Description = "صحبت کردن با دیگران برای انتقال موثر اطلاعات.",
                            MeritItemId = 1,
                            Title = "صحبت كردن"
                        },
                        new
                        {
                            Id = 6,
                            Description = "شناسایی مشکلات پیچیده و بررسی اطلاعات مرتبط برای توسعه و ارزیابی گزینه ها و اجرای راه حل ها.",
                            MeritItemId = 1,
                            Title = "حل مسائل پیچیده"
                        },
                        new
                        {
                            Id = 7,
                            Description = "استفاده از قوانین و روش های علمی برای حل مسائل.",
                            MeritItemId = 1,
                            Title = "علوم پایه"
                        },
                        new
                        {
                            Id = 8,
                            Description = "استفاده از ریاضیات برای حل مسائل",
                            MeritItemId = 1,
                            Title = "ریاضیات"
                        },
                        new
                        {
                            Id = 9,
                            Description = "درک پیامدهای اطلاعات جدید برای حل مسئله و تصمیم گیری فعلی و آینده.",
                            MeritItemId = 1,
                            Title = "یادگیری فعال"
                        },
                        new
                        {
                            Id = 10,
                            Description = "در نظر گرفتن هزینه ها و منافع نسبی اقدامات بالقوه برای انتخاب مناسب ترین.",
                            MeritItemId = 1,
                            Title = "قضاوت و تصمیم گیری"
                        },
                        new
                        {
                            Id = 12,
                            Description = "انتخاب و استفاده از روش‌ها و روش‌های آموزشی/آموزشی متناسب با موقعیت در هنگام یادگیری یا آموزش چیزهای جدید.",
                            MeritItemId = 1,
                            Title = "راهکارهای آموختن"
                        },
                        new
                        {
                            Id = 13,
                            Description = "تعیین اینکه یک سیستم چگونه باید کار کند و چگونه تغییرات در شرایط، عملیات و محیط بر نتایج تأثیر می گذارد.",
                            MeritItemId = 1,
                            Title = "تجزیه و تحلیل سیستم ها"
                        },
                        new
                        {
                            Id = 14,
                            Description = "نظارت/ارزیابی عملکرد خود، سایر افراد یا سازمان ها برای ایجاد بهبود یا انجام اقدامات اصلاحی.",
                            MeritItemId = 1,
                            Title = "نظارت بر"
                        },
                        new
                        {
                            Id = 15,
                            Description = "آگاه بودن از واکنش دیگران و درک اینکه چرا آنها مانند خودشان واکنش نشان می دهند.",
                            MeritItemId = 1,
                            Title = "ادراک اجتماعی"
                        },
                        new
                        {
                            Id = 16,
                            Description = "تنظیم اعمال در رابطه با اعمال دیگران.",
                            MeritItemId = 1,
                            Title = "هماهنگی"
                        },
                        new
                        {
                            Id = 17,
                            Description = "شناسایی معیارها یا شاخص های عملکرد سیستم و اقدامات لازم برای بهبود یا اصلاح عملکرد، نسبت به اهداف سیستم.",
                            MeritItemId = 1,
                            Title = "ارزیابی سیستم ها"
                        },
                        new
                        {
                            Id = 18,
                            Description = "مدیریت زمان خود و دیگران.",
                            MeritItemId = 1,
                            Title = "مدیریت زمان"
                        },
                        new
                        {
                            Id = 19,
                            Description = "یاد دادن به دیگران که چگونه کاری را انجام دهند.",
                            MeritItemId = 1,
                            Title = "دستور دادن"
                        },
                        new
                        {
                            Id = 20,
                            Description = "نوشتن برنامه های کامپیوتری برای اهداف مختلف.",
                            MeritItemId = 1,
                            Title = "برنامه نويسي"
                        },
                        new
                        {
                            Id = 21,
                            Description = "متقاعد کردن دیگران برای تغییر عقیده یا رفتارشان.",
                            MeritItemId = 1,
                            Title = "اقناع"
                        },
                        new
                        {
                            Id = 22,
                            Description = "انجام تست ها و بازرسی محصولات، خدمات یا فرآیندها برای ارزیابی کیفیت یا عملکرد.",
                            MeritItemId = 1,
                            Title = "تجزیه و تحلیل کنترل کیفیت"
                        },
                        new
                        {
                            Id = 23,
                            Description = "دور هم جمع کردن دیگران و تلاش برای آشتی دادن اختلافات.",
                            MeritItemId = 1,
                            Title = "مذاکره"
                        },
                        new
                        {
                            Id = 24,
                            Description = "فعالانه به دنبال راه هایی برای کمک به مردم است.",
                            MeritItemId = 1,
                            Title = "جهت گیری خدمات"
                        },
                        new
                        {
                            Id = 25,
                            Description = "تجزیه و تحلیل نیازها و الزامات محصول برای ایجاد یک طرح.",
                            MeritItemId = 1,
                            Title = "تجزیه و تحلیل عملیات"
                        },
                        new
                        {
                            Id = 26,
                            Description = "به دست آوردن و مشاهده استفاده مناسب از تجهیزات، امکانات و مواد مورد نیاز برای انجام کارهای معین.",
                            MeritItemId = 1,
                            Title = "مدیریت منابع مادی"
                        },
                        new
                        {
                            Id = 27,
                            Description = "تولید یا تطبیق تجهیزات و فناوری برای پاسخگویی به نیازهای کاربر.",
                            MeritItemId = 1,
                            Title = "طراحی فناوری"
                        },
                        new
                        {
                            Id = 28,
                            Description = "تعیین علل خطاهای عملیاتی و تصمیم گیری در مورد آن.",
                            MeritItemId = 1,
                            Title = "عیب یابی"
                        },
                        new
                        {
                            Id = 29,
                            Description = "تعیین چگونگی هزینه کردن پول برای انجام کار، و حسابداری برای این هزینه ها.",
                            MeritItemId = 1,
                            Title = "مدیریت منابع مالی"
                        },
                        new
                        {
                            Id = 30,
                            Description = "کنترل عملیات تجهیزات یا سیستم ها.",
                            MeritItemId = 1,
                            Title = "عملیات و کنترل"
                        },
                        new
                        {
                            Id = 31,
                            Description = "آشنایی با ساختار و محتوای زبان انگلیسی شامل معنی و املای کلمات، قواعد ترکیب و دستور زبان.",
                            MeritItemId = 2,
                            Title = "زبان انگلیسی"
                        },
                        new
                        {
                            Id = 32,
                            Description = "آشنایی با بردهای مدار، پردازنده ها، تراشه ها، تجهیزات الکترونیکی و سخت افزار و نرم افزار کامپیوتر از جمله برنامه های کاربردی و برنامه نویسی.",
                            MeritItemId = 2,
                            Title = "کامپیوتر و الکترونیک"
                        },
                        new
                        {
                            Id = 33,
                            Description = "آشنایی با رویه ها و سیستم های اداری  مانند واژه پردازی، مدیریت فایل ها و سوابق، تنگ نگاری و رونویسی، طراحی فرم ها و اصطلاحات محل کار.",
                            MeritItemId = 2,
                            Title = "اداری"
                        },
                        new
                        {
                            Id = 34,
                            Description = "دانش حساب، جبر، هندسه، حساب دیفرانسیل و انتگرال، آمار و کاربردهای آنها.",
                            MeritItemId = 2,
                            Title = "ریاضیات"
                        },
                        new
                        {
                            Id = 35,
                            Description = "آشنایی با اصول و فرآیندهای ارائه خدمات به مشتریان و شخصی. این شامل ارزیابی نیازهای مشتری، رعایت استانداردهای کیفیت برای خدمات و ارزیابی رضایت مشتری است.",
                            MeritItemId = 2,
                            Title = "خدمات مشتری و شخصی"
                        },
                        new
                        {
                            Id = 36,
                            Description = "آشنایی با اصول و روشهای برنامه درسی و طراحی آموزشی، تدریس و آموزش برای افراد و گروهها و سنجش تأثیرات آموزشی.",
                            MeritItemId = 2,
                            Title = "آموزش و پرورش"
                        },
                        new
                        {
                            Id = 37,
                            Description = "آگاهی از رفتار و عملکرد انسان؛ تفاوت های فردی در توانایی، شخصیت و علایق؛ یادگیری و انگیزه؛ روش های تحقیق روانشناختی؛ و ارزیابی و درمان اختلالات رفتاری و عاطفی.",
                            MeritItemId = 2,
                            Title = "روانشناسی"
                        },
                        new
                        {
                            Id = 38,
                            Description = "آگاهی از اصول کسب و کار و مدیریت مربوط به برنامه ریزی استراتژیک، تخصیص منابع، مدل سازی منابع انسانی، تکنیک رهبری، روش های تولید و هماهنگی افراد و منابع.",
                            MeritItemId = 2,
                            Title = "مدیریت"
                        },
                        new
                        {
                            Id = 39,
                            Description = "آگاهی از قوانین، قوانین حقوقی، رویه های دادگاه، سوابق، مقررات دولتی، دستورات اجرایی، قوانین آژانس و روند سیاسی دموکراتیک.",
                            MeritItemId = 2,
                            Title = "قانون و دولت"
                        },
                        new
                        {
                            Id = 40,
                            Description = "آشنایی با تکنیک ها و روش های تولید رسانه، ارتباطات و انتشار. این شامل راه های جایگزین برای اطلاع رسانی و سرگرمی از طریق رسانه های نوشتاری، شفاهی و بصری است.",
                            MeritItemId = 2,
                            Title = "ارتباطات و رسانه"
                        },
                        new
                        {
                            Id = 41,
                            Description = "آشنایی با اصول و روش های نمایش، تبلیغ و فروش محصولات یا خدمات. این شامل استراتژی ها و تاکتیک های بازاریابی، نمایش محصول، تکنیک های فروش و سیستم های کنترل فروش است.",
                            MeritItemId = 2,
                            Title = "فروش و بازاریابی"
                        },
                        new
                        {
                            Id = 43,
                            Description = "آگاهی از رفتار و پویایی گروه، روندها و تأثیرات اجتماعی، مهاجرت های انسانی، قومیت، فرهنگ ها و تاریخچه و خاستگاه آنها.",
                            MeritItemId = 2,
                            Title = "جامعه شناسی و مردم شناسی"
                        },
                        new
                        {
                            Id = 44,
                            Description = "آشنایی با اصول و رویه های جذب پرسنل، گزینش، آموزش، جبران خسارت و مزایا، روابط کار و مذاکره و سیستم های اطلاعات پرسنل.",
                            MeritItemId = 2,
                            Title = "پرسنل و منابع انسانی"
                        },
                        new
                        {
                            Id = 45,
                            Description = "آگاهی از اصول، روش ها و روش های تشخیص، درمان و توانبخشی اختلالات جسمی و روانی و مشاوره و راهنمایی شغلی.",
                            MeritItemId = 2,
                            Title = "درمان و مشاوره"
                        },
                        new
                        {
                            Id = 46,
                            Description = "آشنایی با نظام ها و مذاهب مختلف فلسفی. این شامل اصول اساسی، ارزش‌ها، اخلاق، روش‌های تفکر، آداب و رسوم، اعمال و تأثیر آن‌ها بر فرهنگ انسانی است.",
                            MeritItemId = 2,
                            Title = "فلسفه و الهیات"
                        },
                        new
                        {
                            Id = 47,
                            Description = "آگاهی از ساختار و محتوای یک زبان خارجی (غیر انگلیسی) شامل معنی و املای کلمات، قواعد ترکیب و دستور زبان و تلفظ.",
                            MeritItemId = 2,
                            Title = "زبان خارجی"
                        },
                        new
                        {
                            Id = 48,
                            Description = "نئو  c2",
                            MeritItemId = 3,
                            Title = "سازمان دهی وظایف"
                        },
                        new
                        {
                            Id = 49,
                            Description = "نئو  c2",
                            MeritItemId = 3,
                            Title = "اولویت بندی وظایف"
                        },
                        new
                        {
                            Id = 50,
                            Description = "نئو  c5&6",
                            MeritItemId = 3,
                            Title = "مدیریت بحران"
                        },
                        new
                        {
                            Id = 51,
                            Description = "نئو  c2",
                            MeritItemId = 3,
                            Title = "برنامه ریزی وظایف"
                        },
                        new
                        {
                            Id = 52,
                            Description = "نئو  c4",
                            MeritItemId = 3,
                            Title = "تعیین هدف"
                        },
                        new
                        {
                            Id = 53,
                            Description = "طرح مسئله فرضی یا پرسش درباره تجربیات",
                            MeritItemId = 4,
                            Title = "تحلیل و ارزیابی"
                        },
                        new
                        {
                            Id = 54,
                            Description = "طرح مسئله فرضی یا پرسش درباره تجربیات",
                            MeritItemId = 4,
                            Title = "استدلال منطقی"
                        },
                        new
                        {
                            Id = 55,
                            Description = "نئو e4",
                            MeritItemId = 4,
                            Title = "تصمیم گیری"
                        },
                        new
                        {
                            Id = 56,
                            Description = "طرح مسئله فرضی یا پرسش درباره تجربیات",
                            MeritItemId = 4,
                            Title = "مشاهده دقیق"
                        },
                        new
                        {
                            Id = 57,
                            Description = "طرح مسئله فرضی یا پرسش درباره تجربیات",
                            MeritItemId = 4,
                            Title = "طوفان فکری"
                        },
                        new
                        {
                            Id = 58,
                            Description = "نئو e1",
                            MeritItemId = 5,
                            Title = "همدلی و همدردی"
                        },
                        new
                        {
                            Id = 59,
                            Description = "نئو e2",
                            MeritItemId = 5,
                            Title = "تیم سازی"
                        },
                        new
                        {
                            Id = 60,
                            Description = "روابط و ساختار ارتباط وی در حوزه تخصصی اش چقدر وسعت دارد؟",
                            MeritItemId = 5,
                            Title = "شبکه سازی"
                        },
                        new
                        {
                            Id = 61,
                            Description = "عملکرد وی در تحلیل و فهم صحبت دیگران چه گونه است؟",
                            MeritItemId = 5,
                            Title = "درک افراد"
                        },
                        new
                        {
                            Id = 62,
                            Description = "برداشت کلی مصاحبه گر",
                            MeritItemId = 6,
                            Title = "ارتباط کلامی"
                        },
                        new
                        {
                            Id = 63,
                            Description = "نحوه نوشتن رزومه، ویراستاری، نوع پرزنت خود در رزومه",
                            MeritItemId = 6,
                            Title = "ارتباط نوشتاری"
                        },
                        new
                        {
                            Id = 64,
                            Description = "برداشت کلی مصاحبه گر",
                            MeritItemId = 6,
                            Title = "اغازگر ارتباط"
                        },
                        new
                        {
                            Id = 65,
                            Description = "برداشت کلی مصاحبه گر",
                            MeritItemId = 6,
                            Title = "بازخورد موثر"
                        },
                        new
                        {
                            Id = 66,
                            Description = "برداشت کلی مصاحبه گر",
                            MeritItemId = 6,
                            Title = "گوش دادن فعال"
                        },
                        new
                        {
                            Id = 67,
                            Description = "چقدر بر قوانین و ملاحظات تخصصی شغل خود آگاه است + اخلاق عمومی",
                            MeritItemId = 7,
                            Title = "اخلاق کاری"
                        },
                        new
                        {
                            Id = 68,
                            Description = "برداشت کلی مصاحبه گر",
                            MeritItemId = 7,
                            Title = "صداقت"
                        },
                        new
                        {
                            Id = 69,
                            Description = "سوال در خصوص منابع مالی فرد، دیدگاه فرد نسبت به آینده ی موقعیت شغلی",
                            MeritItemId = 7,
                            Title = "اشتیاق (تعهد عاطفی)"
                        },
                        new
                        {
                            Id = 70,
                            Description = "سوال در خصوص منابع مالی فرد، دیدگاه فرد نسبت به آینده ی موقعیت شغلی",
                            MeritItemId = 7,
                            Title = "نیاز (تعهد مستمر)"
                        },
                        new
                        {
                            Id = 71,
                            Description = "سوال در خصوص منابع مالی فرد، دیدگاه فرد نسبت به آینده ی موقعیت شغلی",
                            MeritItemId = 7,
                            Title = "تعهد (تداوم هنجاری)"
                        },
                        new
                        {
                            Id = 72,
                            Description = "چقدر بر هیجانات خود اگاه است؟",
                            MeritItemId = 8,
                            Title = "هوش درون فردی"
                        },
                        new
                        {
                            Id = 73,
                            Description = "چقدر در بروز و ظهور هیجانات موفق است؟",
                            MeritItemId = 8,
                            Title = "هوش بین فردی"
                        },
                        new
                        {
                            Id = 74,
                            Description = "چقدر در پذیرش هیجانات موفق است؟",
                            MeritItemId = 8,
                            Title = "توان سازگاری"
                        },
                        new
                        {
                            Id = 75,
                            Description = "چقدر در کنترل و مدیریت هیجانات موفق است؟",
                            MeritItemId = 8,
                            Title = "کنترل استرس"
                        },
                        new
                        {
                            Id = 76,
                            Description = "خلق عمومی او به چه شکل است؟",
                            MeritItemId = 8,
                            Title = "خلق عمومی"
                        },
                        new
                        {
                            Id = 77,
                            Description = "عملکرد ولی در برخورد با چالش های مصاحبه",
                            MeritItemId = 9,
                            Title = "تاب آوری"
                        },
                        new
                        {
                            Id = 78,
                            Description = "میزان اعتماد به نفس فرد در مصاحبه",
                            MeritItemId = 9,
                            Title = "خودکار آمدی"
                        },
                        new
                        {
                            Id = 79,
                            Description = "میزان امیدواری فرد نسبت به آینده",
                            MeritItemId = 9,
                            Title = "امیدواری"
                        },
                        new
                        {
                            Id = 80,
                            Description = "میزان خوش بینی فرد نسبت به رخداد های آینده",
                            MeritItemId = 9,
                            Title = "خوش بینی"
                        },
                        new
                        {
                            Id = 81,
                            Description = "مستندات علمی فرد+پذیرا بودن نظرات در مصاحبه",
                            MeritItemId = 10,
                            Title = "تواضع و پذیرش"
                        },
                        new
                        {
                            Id = 82,
                            Description = "مستندات علمی فرد+پذیرا بودن نظرات در مصاحبه",
                            MeritItemId = 10,
                            Title = "روحیه یادگیری"
                        },
                        new
                        {
                            Id = 83,
                            Description = "مسیر شغلی فرد تا کنون چه بوده است/ تصورش از مسیر شغلی اش در آینده چیست؟",
                            MeritItemId = 10,
                            Title = "بلند پرواز"
                        },
                        new
                        {
                            Id = 84,
                            Description = "پرسش در مورد تجربیات گذشته",
                            MeritItemId = 11,
                            Title = "نظارت بر اثربخشی"
                        },
                        new
                        {
                            Id = 85,
                            Description = "پرسش در مورد تجربیات گذشته",
                            MeritItemId = 11,
                            Title = "برنامه ریزی، سازماندهی"
                        },
                        new
                        {
                            Id = 86,
                            Description = "پرسش در مورد تجربیات گذشته",
                            MeritItemId = 11,
                            Title = "تفویض و تقسیم مسئولیت"
                        },
                        new
                        {
                            Id = 87,
                            Description = "پرسش در مورد تجربیات گذشته",
                            MeritItemId = 11,
                            Title = "حمایت و تشویق "
                        },
                        new
                        {
                            Id = 88,
                            Description = "برداشت کلی مصاحبه گر",
                            MeritItemId = 12,
                            Title = "آشنایی با فریمورک های برنامه نویسی"
                        },
                        new
                        {
                            Id = 89,
                            Description = "برداشت کلی مصاحبه گر",
                            MeritItemId = 12,
                            Title = "آشنایی با ویندوز"
                        },
                        new
                        {
                            Id = 90,
                            Description = "برداشت کلی مصاحبه گر",
                            MeritItemId = 12,
                            Title = "آشنایی با  تلفن همراه"
                        },
                        new
                        {
                            Id = 91,
                            Description = "میزان تحصیلات مورد نیاز برای احراز در این موقعیت شغلی",
                            MeritItemId = 13,
                            Title = "سطح تحصیلات"
                        },
                        new
                        {
                            Id = 92,
                            Description = "",
                            MeritItemId = 14,
                            Title = "میزان سابقه ی مهندسی"
                        },
                        new
                        {
                            Id = 93,
                            Description = "",
                            MeritItemId = 15,
                            Title = "میزان سابقه ی غیر مهندسی"
                        },
                        new
                        {
                            Id = 94,
                            Description = "دوره ها و یا آموزش های حرفه ای که فرد برای این شغل فراگرفته",
                            MeritItemId = 16,
                            Title = "دوره حضوری یا غیر حضوری"
                        },
                        new
                        {
                            Id = 95,
                            Description = "",
                            MeritItemId = 17,
                            Title = "نظم شرکت در کلاس ها و برنامه های ورزشی"
                        },
                        new
                        {
                            Id = 96,
                            Description = "",
                            MeritItemId = 17,
                            Title = "رعایت رژیم غذایی طبق توصیه پزشک یا مربی"
                        },
                        new
                        {
                            Id = 97,
                            Description = "",
                            MeritItemId = 18,
                            Title = "معاینات و ارزیابی اندام‌ها"
                        },
                        new
                        {
                            Id = 98,
                            Description = "",
                            MeritItemId = 18,
                            Title = "آزمایش خون"
                        },
                        new
                        {
                            Id = 99,
                            Description = "",
                            MeritItemId = 18,
                            Title = "آزمایش ادرار (که شامل تست اعتیاد هم می‌شود)"
                        },
                        new
                        {
                            Id = 100,
                            Description = "",
                            MeritItemId = 18,
                            Title = "نوار قلب"
                        },
                        new
                        {
                            Id = 101,
                            Description = "",
                            MeritItemId = 18,
                            Title = "معاینات بینایی‌سنجی (اپتومتری)"
                        },
                        new
                        {
                            Id = 102,
                            Description = "",
                            MeritItemId = 18,
                            Title = "بررسی شنوایی‌سنجی (آدیومتر)"
                        },
                        new
                        {
                            Id = 103,
                            Description = "",
                            MeritItemId = 18,
                            Title = "سلامت تنفس (اسپیرومتری)"
                        },
                        new
                        {
                            Id = 104,
                            Description = "",
                            MeritItemId = 18,
                            Title = "فشارخون"
                        },
                        new
                        {
                            Id = 105,
                            Description = "",
                            MeritItemId = 18,
                            Title = "چکاپ ادواری"
                        },
                        new
                        {
                            Id = 106,
                            Description = "",
                            MeritItemId = 19,
                            Title = "روان رنجوری"
                        },
                        new
                        {
                            Id = 107,
                            Description = "",
                            MeritItemId = 19,
                            Title = "برون گرایی"
                        },
                        new
                        {
                            Id = 108,
                            Description = "",
                            MeritItemId = 19,
                            Title = "گشودگی به تجربه"
                        },
                        new
                        {
                            Id = 109,
                            Description = "",
                            MeritItemId = 19,
                            Title = "سازگاری"
                        },
                        new
                        {
                            Id = 110,
                            Description = "",
                            MeritItemId = 19,
                            Title = "مسئولیت پذیری"
                        },
                        new
                        {
                            Id = 111,
                            Description = "",
                            MeritItemId = 20,
                            Title = "لنگرگاه فنی"
                        },
                        new
                        {
                            Id = 112,
                            Description = "",
                            MeritItemId = 20,
                            Title = "لنگرگاه خدمت"
                        },
                        new
                        {
                            Id = 113,
                            Description = "",
                            MeritItemId = 20,
                            Title = "لنگرگاه استقلال"
                        },
                        new
                        {
                            Id = 114,
                            Description = "",
                            MeritItemId = 20,
                            Title = "لنگرگاه تنوع"
                        },
                        new
                        {
                            Id = 115,
                            Description = "",
                            MeritItemId = 20,
                            Title = "لنگرگاه مدیریت"
                        },
                        new
                        {
                            Id = 116,
                            Description = "",
                            MeritItemId = 20,
                            Title = "لنگرگاه هویت"
                        },
                        new
                        {
                            Id = 117,
                            Description = "",
                            MeritItemId = 20,
                            Title = "لنگرگاه امنیت"
                        },
                        new
                        {
                            Id = 118,
                            Description = "",
                            MeritItemId = 20,
                            Title = "لنگرگاه خلاقیت"
                        },
                        new
                        {
                            Id = 119,
                            Description = "",
                            MeritItemId = 21,
                            Title = "هنری"
                        },
                        new
                        {
                            Id = 120,
                            Description = "",
                            MeritItemId = 21,
                            Title = "جستجوگر"
                        },
                        new
                        {
                            Id = 121,
                            Description = "",
                            MeritItemId = 21,
                            Title = "اجتماعی"
                        },
                        new
                        {
                            Id = 122,
                            Description = "",
                            MeritItemId = 21,
                            Title = "متهور"
                        },
                        new
                        {
                            Id = 123,
                            Description = "",
                            MeritItemId = 21,
                            Title = "واقع گرا"
                        },
                        new
                        {
                            Id = 124,
                            Description = "",
                            MeritItemId = 21,
                            Title = "قرارداری"
                        });
                });

            modelBuilder.Entity("EPE.Domain.MasterData.Aggregates.GenderMD", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genders", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "زن"
                        },
                        new
                        {
                            Id = 2,
                            Title = "مرد"
                        });
                });

            modelBuilder.Entity("EPE.Domain.MasterData.Aggregates.JobEvaluatedItemMD", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int>("CriterionScore")
                        .HasColumnType("int");

                    b.Property<int>("EvaluationItemId")
                        .HasColumnType("int");

                    b.Property<int>("ImportanceFactor")
                        .HasColumnType("int");

                    b.Property<int?>("JobMDId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("JobMDId");

                    b.ToTable("JobEvaluatedItems", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CriterionScore = 60,
                            EvaluationItemId = 1,
                            ImportanceFactor = 10,
                            JobMDId = 1
                        },
                        new
                        {
                            Id = 2L,
                            CriterionScore = 60,
                            EvaluationItemId = 8,
                            ImportanceFactor = 20,
                            JobMDId = 1
                        },
                        new
                        {
                            Id = 3L,
                            CriterionScore = 60,
                            EvaluationItemId = 12,
                            ImportanceFactor = 20,
                            JobMDId = 1
                        },
                        new
                        {
                            Id = 4L,
                            CriterionScore = 60,
                            EvaluationItemId = 20,
                            ImportanceFactor = 15,
                            JobMDId = 1
                        },
                        new
                        {
                            Id = 5L,
                            CriterionScore = 60,
                            EvaluationItemId = 27,
                            ImportanceFactor = 30,
                            JobMDId = 1
                        },
                        new
                        {
                            Id = 6L,
                            CriterionScore = 60,
                            EvaluationItemId = 28,
                            ImportanceFactor = 30,
                            JobMDId = 1
                        },
                        new
                        {
                            Id = 7L,
                            CriterionScore = 60,
                            EvaluationItemId = 31,
                            ImportanceFactor = 40,
                            JobMDId = 1
                        },
                        new
                        {
                            Id = 8L,
                            CriterionScore = 60,
                            EvaluationItemId = 32,
                            ImportanceFactor = 20,
                            JobMDId = 1
                        },
                        new
                        {
                            Id = 9L,
                            CriterionScore = 60,
                            EvaluationItemId = 34,
                            ImportanceFactor = 10,
                            JobMDId = 1
                        },
                        new
                        {
                            Id = 10L,
                            CriterionScore = 60,
                            EvaluationItemId = 49,
                            ImportanceFactor = 15,
                            JobMDId = 1
                        },
                        new
                        {
                            Id = 11L,
                            CriterionScore = 60,
                            EvaluationItemId = 53,
                            ImportanceFactor = 15,
                            JobMDId = 1
                        },
                        new
                        {
                            Id = 12L,
                            CriterionScore = 60,
                            EvaluationItemId = 54,
                            ImportanceFactor = 10,
                            JobMDId = 1
                        },
                        new
                        {
                            Id = 13L,
                            CriterionScore = 60,
                            EvaluationItemId = 55,
                            ImportanceFactor = 40,
                            JobMDId = 1
                        },
                        new
                        {
                            Id = 14L,
                            CriterionScore = 60,
                            EvaluationItemId = 67,
                            ImportanceFactor = 10,
                            JobMDId = 1
                        },
                        new
                        {
                            Id = 15L,
                            CriterionScore = 60,
                            EvaluationItemId = 77,
                            ImportanceFactor = 30,
                            JobMDId = 1
                        },
                        new
                        {
                            Id = 16L,
                            CriterionScore = 60,
                            EvaluationItemId = 88,
                            ImportanceFactor = 20,
                            JobMDId = 1
                        },
                        new
                        {
                            Id = 17L,
                            CriterionScore = 60,
                            EvaluationItemId = 89,
                            ImportanceFactor = 30,
                            JobMDId = 1
                        },
                        new
                        {
                            Id = 18L,
                            CriterionScore = 60,
                            EvaluationItemId = 91,
                            ImportanceFactor = 25,
                            JobMDId = 1
                        },
                        new
                        {
                            Id = 19L,
                            CriterionScore = 60,
                            EvaluationItemId = 92,
                            ImportanceFactor = 20,
                            JobMDId = 1
                        },
                        new
                        {
                            Id = 20L,
                            CriterionScore = 60,
                            EvaluationItemId = 109,
                            ImportanceFactor = 20,
                            JobMDId = 1
                        },
                        new
                        {
                            Id = 21L,
                            CriterionScore = 60,
                            EvaluationItemId = 110,
                            ImportanceFactor = 25,
                            JobMDId = 1
                        },
                        new
                        {
                            Id = 22L,
                            CriterionScore = 60,
                            EvaluationItemId = 124,
                            ImportanceFactor = 15,
                            JobMDId = 1
                        });
                });

            modelBuilder.Entity("EPE.Domain.MasterData.Aggregates.JobMD", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Jobs", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "کارشناس برنامه نویسی"
                        });
                });

            modelBuilder.Entity("EPE.Domain.MasterData.Aggregates.MaritalStatusMD", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MaritalStatuses", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "مجرد"
                        },
                        new
                        {
                            Id = 2,
                            Title = "متاهل"
                        });
                });

            modelBuilder.Entity("EPE.Domain.MasterData.Aggregates.MeritItemMD", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("MeritId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MeritItems", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MeritId = 1,
                            Title = "مهارت"
                        },
                        new
                        {
                            Id = 2,
                            MeritId = 1,
                            Title = "دانش"
                        },
                        new
                        {
                            Id = 3,
                            MeritId = 2,
                            Title = "برنامه ریزی و سازماندهی"
                        },
                        new
                        {
                            Id = 4,
                            MeritId = 2,
                            Title = "حل مساله"
                        },
                        new
                        {
                            Id = 5,
                            MeritId = 2,
                            Title = "مهارت های بین فردی"
                        },
                        new
                        {
                            Id = 6,
                            MeritId = 2,
                            Title = "ارتباط موثر"
                        },
                        new
                        {
                            Id = 7,
                            MeritId = 2,
                            Title = "تعهد سازمانی"
                        },
                        new
                        {
                            Id = 8,
                            MeritId = 2,
                            Title = "ثبات هیجانی"
                        },
                        new
                        {
                            Id = 9,
                            MeritId = 2,
                            Title = "سرمایه روانشناختی"
                        },
                        new
                        {
                            Id = 10,
                            MeritId = 2,
                            Title = "ارتقا دانش"
                        },
                        new
                        {
                            Id = 11,
                            MeritId = 2,
                            Title = "هدایت افراد"
                        },
                        new
                        {
                            Id = 12,
                            MeritId = 2,
                            Title = "دانش و فناوری"
                        },
                        new
                        {
                            Id = 13,
                            MeritId = 3,
                            Title = "تحصیلات"
                        },
                        new
                        {
                            Id = 14,
                            MeritId = 3,
                            Title = "سابقه کار مرتبط"
                        },
                        new
                        {
                            Id = 15,
                            MeritId = 3,
                            Title = "سابقه کار نامرتبط"
                        },
                        new
                        {
                            Id = 16,
                            MeritId = 3,
                            Title = "آموزش حرفه ای"
                        },
                        new
                        {
                            Id = 17,
                            MeritId = 4,
                            Title = "نظم و پیگیری"
                        },
                        new
                        {
                            Id = 18,
                            MeritId = 4,
                            Title = "طب کار (ثبت در پرونده پرسنلی )"
                        },
                        new
                        {
                            Id = 19,
                            MeritId = 5,
                            Title = "نئو"
                        },
                        new
                        {
                            Id = 20,
                            MeritId = 5,
                            Title = "لنگرگاه شغلی"
                        },
                        new
                        {
                            Id = 21,
                            MeritId = 5,
                            Title = "استرانگ"
                        });
                });

            modelBuilder.Entity("EPE.Domain.MasterData.Aggregates.MeritMD", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Merits", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "تخصصی"
                        },
                        new
                        {
                            Id = 2,
                            Title = "عمومی"
                        },
                        new
                        {
                            Id = 3,
                            Title = "تجربی"
                        },
                        new
                        {
                            Id = 4,
                            Title = "سلامت جسم"
                        },
                        new
                        {
                            Id = 5,
                            Title = "نتایج آزمون ها"
                        });
                });

            modelBuilder.Entity("EPE.Domain.MasterData.Aggregates.MilitaryServiceStatusMD", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MilitaryServiceStatuses", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "مشمول"
                        },
                        new
                        {
                            Id = 2,
                            Title = "معافیت تحصیلی"
                        },
                        new
                        {
                            Id = 3,
                            Title = "درحال خدمت"
                        },
                        new
                        {
                            Id = 4,
                            Title = "معاف دائم"
                        },
                        new
                        {
                            Id = 5,
                            Title = "اتمام خدمت"
                        });
                });

            modelBuilder.Entity("EPE.Domain.MasterData.Aggregates.PhysicalInfoMD", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PhysicalInfos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "قد"
                        },
                        new
                        {
                            Id = 2,
                            Title = "وزن"
                        },
                        new
                        {
                            Id = 3,
                            Title = "سایز لباس"
                        },
                        new
                        {
                            Id = 4,
                            Title = "شلوار"
                        },
                        new
                        {
                            Id = 5,
                            Title = "سایز کفش"
                        });
                });

            modelBuilder.Entity("EPE.Domain.PerformanceEvaluate.Aggregates.EmployeePerformanceEvaluate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("EmployeeFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeePersonalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MeritFactor")
                        .HasColumnType("float");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("TotalWeightedCriterionScore")
                        .HasColumnType("float");

                    b.Property<double>("TotalWeightedScore")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("EmployeePerformanceEvaluates", (string)null);
                });

            modelBuilder.Entity("EPE.Domain.PerformanceEvaluate.Aggregates.MeritAverage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<double>("CriterionScore")
                        .HasColumnType("float");

                    b.Property<long?>("EmployeePerformanceEvaluateId")
                        .HasColumnType("bigint");

                    b.Property<string>("MeritTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Score")
                        .HasColumnType("float");

                    b.Property<double>("TotalScale")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("EmployeePerformanceEvaluateId");

                    b.ToTable("MeritAverages", (string)null);
                });

            modelBuilder.Entity("EPE.Domain.PerformanceEvaluate.Aggregates.MeritItemAverage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<double>("CriterionScore")
                        .HasColumnType("float");

                    b.Property<long?>("EmployeePerformanceEvaluateId")
                        .HasColumnType("bigint");

                    b.Property<string>("MeritItemTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MeritScale")
                        .HasColumnType("float");

                    b.Property<string>("MeritTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Score")
                        .HasColumnType("float");

                    b.Property<double>("TotalScale")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("EmployeePerformanceEvaluateId");

                    b.ToTable("MeritItemAverages", (string)null);
                });

            modelBuilder.Entity("EPE.Domain.PerformanceEvaluate.Aggregates.PerformanceEvaluateItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int>("CriterionScore")
                        .HasColumnType("int");

                    b.Property<long?>("EmployeePerformanceEvaluateId")
                        .HasColumnType("bigint");

                    b.Property<string>("EvaluationItemDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EvaluationItemTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ImportanceFactor")
                        .HasColumnType("int");

                    b.Property<double>("MeritItemScale")
                        .HasColumnType("float");

                    b.Property<string>("MeritItemTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MeritScale")
                        .HasColumnType("float");

                    b.Property<string>("MeritTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<double>("TotalScale")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("EmployeePerformanceEvaluateId");

                    b.ToTable("PerformanceEvaluateItems", (string)null);
                });

            modelBuilder.Entity("EPE.Domain.EmployeeManagement.Aggregates.EmployeeContact", b =>
                {
                    b.HasOne("EPE.Domain.EmployeeManagement.Aggregates.Employee", null)
                        .WithMany("Contacts")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EPE.Domain.EmployeeManagement.Aggregates.EmployeeEducation", b =>
                {
                    b.HasOne("EPE.Domain.EmployeeManagement.Aggregates.Employee", null)
                        .WithMany("Educations")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EPE.Domain.EmployeeManagement.Aggregates.EmployeePhysicalInfo", b =>
                {
                    b.HasOne("EPE.Domain.EmployeeManagement.Aggregates.Employee", null)
                        .WithMany("PhysicalInfo")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EPE.Domain.EmployeeManagement.Aggregates.EmployeeResume", b =>
                {
                    b.HasOne("EPE.Domain.EmployeeManagement.Aggregates.Employee", null)
                        .WithMany("Resume")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EPE.Domain.MasterData.Aggregates.JobEvaluatedItemMD", b =>
                {
                    b.HasOne("EPE.Domain.MasterData.Aggregates.JobMD", null)
                        .WithMany("EvaluatedItems")
                        .HasForeignKey("JobMDId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EPE.Domain.PerformanceEvaluate.Aggregates.MeritAverage", b =>
                {
                    b.HasOne("EPE.Domain.PerformanceEvaluate.Aggregates.EmployeePerformanceEvaluate", null)
                        .WithMany("MeritAverages")
                        .HasForeignKey("EmployeePerformanceEvaluateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EPE.Domain.PerformanceEvaluate.Aggregates.MeritItemAverage", b =>
                {
                    b.HasOne("EPE.Domain.PerformanceEvaluate.Aggregates.EmployeePerformanceEvaluate", null)
                        .WithMany("MeritItemAverages")
                        .HasForeignKey("EmployeePerformanceEvaluateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EPE.Domain.PerformanceEvaluate.Aggregates.PerformanceEvaluateItem", b =>
                {
                    b.HasOne("EPE.Domain.PerformanceEvaluate.Aggregates.EmployeePerformanceEvaluate", null)
                        .WithMany("PerformanceEvaluateItems")
                        .HasForeignKey("EmployeePerformanceEvaluateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EPE.Domain.EmployeeManagement.Aggregates.Employee", b =>
                {
                    b.Navigation("Contacts");

                    b.Navigation("Educations");

                    b.Navigation("PhysicalInfo");

                    b.Navigation("Resume");
                });

            modelBuilder.Entity("EPE.Domain.MasterData.Aggregates.JobMD", b =>
                {
                    b.Navigation("EvaluatedItems");
                });

            modelBuilder.Entity("EPE.Domain.PerformanceEvaluate.Aggregates.EmployeePerformanceEvaluate", b =>
                {
                    b.Navigation("MeritAverages");

                    b.Navigation("MeritItemAverages");

                    b.Navigation("PerformanceEvaluateItems");
                });
#pragma warning restore 612, 618
        }
    }
}
